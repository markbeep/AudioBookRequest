"""add user group, add BookRequest

Revision ID: 787e0b375062
Revises: 939af2c2c9ea
Create Date: 2025-02-16 12:56:48.250739

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "787e0b375062"
down_revision: Union[str, None] = "939af2c2c9ea"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bookrequest",
        sa.Column("asin", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("subtitle", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("authors", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("narrators", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("cover_image", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("user_username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_username"], ["user.username"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("asin"),
    )

    group_type = sa.Enum("untrusted", "trusted", "admin", name="groupenum")
    group_type.create(op.get_bind())
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("group", group_type, server_default="untrusted", nullable=False)
        )
        batch_op.alter_column(
            "username",
            existing_type=sa.BLOB(),
            type_=sqlmodel.sql.sqltypes.AutoString(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "password",
            existing_type=sa.BLOB(),
            type_=sqlmodel.sql.sqltypes.AutoString(),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column(
            "password",
            existing_type=sqlmodel.sql.sqltypes.AutoString(),
            type_=sqlmodel.sql.sqltypes.AutoString(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "username",
            existing_type=sqlmodel.sql.sqltypes.AutoString(),
            type_=sqlmodel.sql.sqltypes.AutoString(),
            existing_nullable=False,
        )
        batch_op.drop_column("group")

    op.drop_table("bookrequest")
    if op.get_bind().dialect.name == "postgresql":
        op.execute("DROP TYPE groupenum")
    # ### end Alembic commands ###
